<?xml version="1.0" encoding="utf-8"?>
<!--
	============================================================================
	Project Name:		Core.csproj

	Project Abstract:	These are functions upon which virtually everything else
						in the WizardWrx .NET API relies, along with additional
						related constants.

	Remarks:			Core functions require Microsoft .NET Framework 3.5,
						Client Profile, or newer.

						As it applies to the Roslyn compiler, the Deterministic
						switch implements determinism in a very narrow context,
						which affects only the versioning of the generated PE
						file in which the assembly is stored.

						This switch is relatively new, and its inclusion in the
						default generated project skeleton appears to be quite
						recent.

						For further details, please see the first article cited
						in the References section that follows.

	References:			1)	Deterministic builds in Roslyn
							http://blog.paranoidcoding.com/2016/04/05/deterministic-builds-in-roslyn.html

						2)	/deterministic switch for msbuild does not work
							https://stackoverflow.com/questions/39657709/deterministic-switch-for-msbuild-does-not-work

	============================================================================
	Revision History
	============================================================================

	Date       By  Description
	========== === =============================================================
	2019/07/04 DAG Add NuGet package and documentation generation.
	============================================================================
-->
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{B5282E82-D211-4BEA-BEBD-B2CC6E45BF5C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>WizardWrx.Core</RootNamespace>
    <AssemblyName>WizardWrx.Core</AssemblyName>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <!-- 2019/05/18 16:54:22 - DAG - Added for NuGet package builder -->
    <PackageDir>Package</PackageDir>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>.pdb$;(AllowedOutputExtensionsInPackageBuildOutputFolder)</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\Wizardwrx.Core.XML</DocumentationFile>
    <LangVersion>7.3</LangVersion>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\Wizardwrx.Core.XML</DocumentationFile>
    <LangVersion>7.3</LangVersion>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.configuration" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\ProductAssemblyInfo.cs">
      <Link>Properties\ProductAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="AgedFileInfo.cs" />
    <Compile Include="AgedFileInfoCollection.cs" />
    <Compile Include="AssemblyLocatorBase.cs" />
    <Compile Include="BasicSystemInfoDisplayMessages.cs" />
    <Compile Include="ByteArrayFormatters.cs" />
    <Compile Include="CmdLneArgsBasic.cs" />
    <Compile Include="DigestFile.cs" />
    <Compile Include="DigestString.cs" />
    <Compile Include="FileInfoExtension.cs" />
    <Compile Include="FileInfoExtensionMethods.cs" />
    <Compile Include="FileNameTricks.cs" />
    <Compile Include="GenericSingletonBase.cs" />
    <Compile Include="ListHelpers.cs" />
    <Compile Include="Logic.cs" />
    <Compile Include="NumberFormatters.cs" />
    <Compile Include="PropertyDefaults.cs" />
    <Compile Include="RecoveredException.cs" />
    <Compile Include="RegistryValues.cs" />
    <Compile Include="ReportDetail.cs" />
    <Compile Include="ReportDetails.cs" />
    <Compile Include="ReportHelpers.cs" />
    <Compile Include="StringExtensions.cs" />
    <Compile Include="StringFixups.cs" />
    <Compile Include="SyncRoot.cs" />
    <Compile Include="SysDateFormatters.cs" />
    <Compile Include="TextBlocks.cs" />
    <Compile Include="TimeDisplayFormatter.cs" />
    <Compile Include="TraceLogger.cs" />
    <Compile Include="UnconfiguredDLLSettings.cs" />
    <Compile Include="UnmanagedLibrary.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- 2019/05/19 14:16:44 - DAG Everything from this point to the end is new, and was added to support NuGet package generation. -->
  <Target Name="AfterBuild">
    <!-- Load up the information from the assembly -->
    <GetAssemblyIdentity AssemblyFiles="$(OutputPath)$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="OutputAssemblyInfo" />
    </GetAssemblyIdentity>
    <Message Text="Info: Assembly $(AssemblyName).dll version =  %(OutputAssemblyInfo.Version)" />
  </Target>
  <Target Name="Package" AfterTargets="AfterBuild" Condition=" '$(Configuration)' == 'Release'">
    <!-- Ensure the Package directory exists for this project -->
    <MakeDir Directories="$(PackageDir)" />
    <!-- Package the project -->
    <Exec WorkingDirectory="$(BuildDir)" Command="NuGet.exe pack $(ProjectName).csproj -Properties Configuration=$(Configuration) -OutputDir $(PackageDir) -IncludeReferencedProjects" />
  </Target>
  <!-- 2019/05/19 00:26:30 - DAG Switch on the push target. -->
  <!-- Publish the project. -->
  <Target Name="Publish" AfterTargets="Package" Condition=" '$(Configuration)' == 'Release'">
    <Exec WorkingDirectory="$(PackageDir)" Command="NuGet.exe push $(AssemblyName).%(OutputAssemblyInfo.Version).nupkg" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <PropertyGroup>
    <PreBuildEvent>wwBldNbrMgr.exe "$(ProjectDir) "</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent>wwBldNbrMgr.exe -r "-p$(ProjectDir) " "-t$(TargetPath)"</PostBuildEvent>
  </PropertyGroup>
  -->
</Project>